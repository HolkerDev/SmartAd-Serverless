service: smartad
provider:
  name: aws
  runtime: rust
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan`
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": [ "smartad", "Arn" ] }

resources:
  Resources:
    smartad:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: smartad
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

disabledDeprecations:
  - '*'

plugins:
  # this registers the plugin
  # with serverless
  - serverless-rust
# creates one artifact for each function
custom:
  rust:
    dockerless: true
    target: aarch64-apple-darwin
    linker: clang
package:
  individually: true
functions:
  # handler value syntax is `{cargo-package-name}.{bin-name}`
  # or `{cargo-package-name}` for short when you are building a
  # default bin for a given package.
  registration:
    handler: smartad.sign_up_user
    events:
      - http:
          path: user/register
          method: POST

